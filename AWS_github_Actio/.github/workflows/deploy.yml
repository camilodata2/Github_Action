name: Build and Deploy

on:
  workflow_dispatch:
  #  inputs:
  #    cloud_provider:
  #      description: 'Select cloud provider'
  #      required: true
  #      default: 'AWS'
  #      options:
  #        - "AWS"
  #        - "GCP"
  #        - "Azure"

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: ##region##
  S3BUCKET: ##s3-bucket##
  ECR_REGISTRY: ##ecr-registry##
  ECR_REPOSITORY: ##ecr-repository##

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Configure tags and labels for ${{ github.ref }}
        run: |
          if [ "$GITHUB_REF" == "refs/heads/master" ]; then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=snapshot" >> $GITHUB_ENV
          fi
          echo "VCS_REF=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate to AWS ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1.5.3
        with:
          registry-type: public

      - name: Build and Push Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          build-args: |
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ env.BUILD_DATE }}

      - name: Upload Artifact to S3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS CodeDeploy
        run: |
          echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
          commit_hash=$(git rev-parse HEAD)
          aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
